stages:              # Les étapes associées au projet.
    - lint
    - build
    - deploy

lint-html:              # Vérification de la qualité du code html 
    stage: lint
    tags:
        - docker
    image: node
    script: 
        - npm install htmlhint
        - ./test.sh
    artifacts:        # Le rapport sera disponible pour d'autres jobs
        paths:
            - linthtml_report.txt

lintcss:                # Vérification de la qualité du code  css
    stage: lint
    tags:
        - docker
    image: node
    script:
        - npm install csslint-cli 
        - ./test_css.sh
    artifacts:            # Le rapport sera disponible pour d'autres jobs
        paths:
            - css_report.txt


minify:
    stage: build
    tags:
        - docker
    image: node
    script:
        - npm install minify
        - mkdir -p build
        - for f in *.{html,css,js}; do npx minify "$f" > "build/$f" ; done
    artifacts:                # Le rapport sera disponible pour d'autres jobs
        paths:
        - build
       

pages: 
    stage: deploy
    script:
        - mkdir -p public # Création du répertoire public
        - cp ./public_html/js/index.html public/index.html
    artifacts:        # Le rapport sera disponible pour d'autres jobs
        paths:
            - public
    dependencies:
        - minify

badges:
    stage: deploy
    script:
        - ./genereBadges.sh # Script de génération des badges
    dependencies:         # Les badges sont générés à partir des rapports s'ils sont disponibles
        - lint-html
        - lintcss
    artifacts:
        paths:
        - linthtml.svg  # Ces fichiers sont générés par le script genereBadges.sh
        #- badge_lint.svg  # et  mis à disposition pour mise en évidence sur la page du dépôt
    when: always          # Et quoiqu'il arrive la génération des badges devra se faire.
                            # Le script de génération de badge doit tenir compte du fait de disposer ou non des rapports 
# Vos pages sont  : Settings → Pages → Your pages are served here